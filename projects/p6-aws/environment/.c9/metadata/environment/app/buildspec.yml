{"filter":false,"title":"buildspec.yml","tooltip":"/app/buildspec.yml","ace":{"folds":[],"scrolltop":235.5,"scrollleft":0,"selection":{"start":{"row":20,"column":47},"end":{"row":20,"column":47},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"hash":"c3d3fa1cada7bb21deb87bbcd778b37cff99459f","undoManager":{"mark":7,"position":7,"stack":[[{"start":{"row":0,"column":0},"end":{"row":39,"column":30},"action":"insert","lines":["# A buildspec.yml file informs AWS CodeBuild of all the actions that should be","# taken during a build execution for our application. We are able to divide the","# build execution in separate pre-defined phases for logical organization, and","# list the commands that will be executed on the provisioned build server","# performing a build execution job.","version: 0.2","","phases:","  pre_build:","    commands:","      - echo Logging in to Amazon ECR...","      # Retrieves docker credentials so that the subsequent docker push command is","      # authorized. Authentication is performed automatically by the AWS CLI","      # using the AWS credentials associated with the IAM role assigned to the","      # instances in your AWS CodeBuild project.","      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)","  build:","    commands:","      - echo Build started on `date`","      - echo Building the Docker image...","      - docker build -t mythicalmysfits/service:latest .","      # Tag the built docker image using the appropriate Amazon ECR endpoint and relevant","      # repository for our service container. This ensures that when the docker push","      # command is executed later, it will be pushed to the appropriate repository.","      - docker tag mythicalmysfits/service:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/mythicalmysfits/service:latest","  post_build:","    commands:","      - echo Build completed on `date`","      - echo Pushing the Docker image..","      # Push the image to ECR.","      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/mythicalmysfits/service:latest","      - echo Completed pushing Docker image. Deploying Docker image to AWS Fargate on `date`","      # Create a artifacts file that contains the name and location of the image","      # pushed to ECR. This will be used by AWS CodePipeline to automate","      # deployment of this specific container to Amazon ECS.","      - printf '[{\"name\":\"MythicalMysfits-Service\",\"imageUri\":\"%s\"}]' $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/mythicalmysfits/service:latest > imagedefinitions.json","artifacts:","  # Indicate that the created imagedefinitions.json file created on the previous","  # line is to be referenceable as an artifact of the build execution job.","  files: imagedefinitions.json"],"id":1}],[{"start":{"row":24,"column":19},"end":{"row":24,"column":42},"action":"remove","lines":["mythicalmysfits/service"],"id":2},{"start":{"row":24,"column":19},"end":{"row":24,"column":42},"action":"insert","lines":["jdslp6industry/project6"]}],[{"start":{"row":24,"column":108},"end":{"row":24,"column":131},"action":"remove","lines":["mythicalmysfits/service"],"id":3},{"start":{"row":24,"column":108},"end":{"row":24,"column":131},"action":"insert","lines":["jdslp6industry/project6"]}],[{"start":{"row":30,"column":78},"end":{"row":30,"column":101},"action":"remove","lines":["mythicalmysfits/service"],"id":4},{"start":{"row":30,"column":78},"end":{"row":30,"column":101},"action":"insert","lines":["jdslp6industry/project6"]}],[{"start":{"row":35,"column":26},"end":{"row":35,"column":49},"action":"remove","lines":["MythicalMysfits-Service"],"id":5},{"start":{"row":35,"column":26},"end":{"row":35,"column":27},"action":"insert","lines":["P"]},{"start":{"row":35,"column":27},"end":{"row":35,"column":28},"action":"insert","lines":["r"]},{"start":{"row":35,"column":28},"end":{"row":35,"column":29},"action":"insert","lines":["o"]},{"start":{"row":35,"column":29},"end":{"row":35,"column":30},"action":"insert","lines":["j"]}],[{"start":{"row":35,"column":30},"end":{"row":35,"column":31},"action":"insert","lines":["6"],"id":6}],[{"start":{"row":35,"column":110},"end":{"row":35,"column":133},"action":"remove","lines":["mythicalmysfits/service"],"id":7},{"start":{"row":35,"column":110},"end":{"row":35,"column":133},"action":"insert","lines":["jdslp6industry/project6"]}],[{"start":{"row":20,"column":24},"end":{"row":20,"column":47},"action":"remove","lines":["mythicalmysfits/service"],"id":8},{"start":{"row":20,"column":24},"end":{"row":20,"column":47},"action":"insert","lines":["jdslp6industry/project6"]}]]},"timestamp":1554783339440}